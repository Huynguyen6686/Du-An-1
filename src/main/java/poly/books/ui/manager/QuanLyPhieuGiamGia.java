/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package poly.books.ui.manager;

import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import poly.books.dao.PhieuGiamGiaDAO;
import poly.books.entity.PhieuGiamGia;
import poly.books.util.XDialog;
import com.toedter.calendar.JDateChooser;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author LAPTOP
 */
public class QuanLyPhieuGiamGia extends javax.swing.JPanel implements poly.books.controller.PhieuGiamGiaController {

    List<PhieuGiamGia> phieuGiamGiaList = new ArrayList<>();
    PhieuGiamGiaDAO phieuGiamGiaDAO = new PhieuGiamGiaDAO();
;

    /**
     * Creates new form QuanLyGiamGia1
     */
    public QuanLyPhieuGiamGia() {
        initComponents();
        jDateChooserBatDau.addPropertyChangeListener("date", new PropertyChangeListener() {
    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        if (jDateChooserBatDau.getDate() != null) {
            txtNgayBatDau.setText(sdf.format(jDateChooserBatDau.getDate()));
        }
    }
});

jDateChooserKetThuc.addPropertyChangeListener("date", new PropertyChangeListener() {
    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        if (jDateChooserKetThuc.getDate() != null) {
            txtNgayKetThuc.setText(sdf.format(jDateChooserKetThuc.getDate()));
        }
    }
});

        addComponentListener(new ComponentAdapter() {
            @Override
            public void componentShown(ComponentEvent e) {
                fillToTable();
            }
        });
//        initComponents();
    }
//    private void initComponents();{
//        txtNgayBatDau = new JDateChooser();
//        txtNgayKetThuc = new JDateChooser();
//        txtNgayBatDau.setDateFormatString("dd/MM/yyyy");
//        txtNgayKetThuc.setDateFormatString("dd/MM/yyyy");
//
//    }
//    private void initCustomComponents() {
//        txtNgayBatDau = new JDateChooser();
//        txtNgayKetThuc = new JDateChooser();
//
//        txtNgayBatDau.setDateFormatString("dd/MM/yyyy");
//        txtNgayKetThuc.setDateFormatString("dd/MM/yyyy");
//
//        // Ví dụ: thêm vào vị trí cụ thể
//        txtNgayBatDau.setBounds(150, 100, 150, 25);   // điều chỉnh toạ độ theo GUI của bạn
//        txtNgayKetThuc.setBounds(150, 140, 150, 25);
//
//        getContentPane().add(txtNgayBatDau);
//        getContentPane().add(txtNgayKetThuc);
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        GiamGia = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        pnlGiamGia = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtVoucherID = new javax.swing.JTextField();
        txtCondition = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtValue = new javax.swing.JTextField();
        rdoAvailable = new javax.swing.JRadioButton();
        rdoUnavailable = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        txtNgayBatDau = new javax.swing.JTextField();
        jDateChooserBatDau = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txtNgayKetThuc = new javax.swing.JTextField();
        jDateChooserKetThuc = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        txtTenKhuyenMai = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhieuGiamGia = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1123, 773));
        setPreferredSize(new java.awt.Dimension(1123, 773));
        setLayout(new java.awt.BorderLayout());

        GiamGia.setBackground(new java.awt.Color(255, 255, 255));
        GiamGia.setMinimumSize(new java.awt.Dimension(1123, 773));
        GiamGia.setPreferredSize(new java.awt.Dimension(1123, 773));
        GiamGia.setLayout(new java.awt.BorderLayout());

        jLabel16.setBackground(new java.awt.Color(0, 144, 193));
        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Giảm Giá");
        jLabel16.setMaximumSize(new java.awt.Dimension(1123, 25));
        jLabel16.setMinimumSize(new java.awt.Dimension(1123, 50));
        jLabel16.setOpaque(true);
        jLabel16.setPreferredSize(new java.awt.Dimension(1123, 50));
        GiamGia.add(jLabel16, java.awt.BorderLayout.PAGE_START);

        pnlGiamGia.setBackground(new java.awt.Color(255, 255, 255));
        pnlGiamGia.setMinimumSize(new java.awt.Dimension(1123, 775));
        pnlGiamGia.setPreferredSize(new java.awt.Dimension(1123, 775));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chương trình khuyến mại", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Tạo mã khuyến mại ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Giá trị");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Điều kiện áp dụng");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Trạng thái");

        buttonGroup1.add(rdoAvailable);
        rdoAvailable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdoAvailable.setText("Có hiệu lực");

        buttonGroup1.add(rdoUnavailable);
        rdoUnavailable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdoUnavailable.setText("Đã hết hạn");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Ngày bắt đầu");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Ngày kết thúc");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Tên khuyến mại");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtValue, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                            .addComponent(txtVoucherID))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(rdoAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(49, 49, 49)
                            .addComponent(rdoUnavailable, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtNgayBatDau, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(31, 31, 31)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jDateChooserKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jDateChooserBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(txtCondition, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenKhuyenMai, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtVoucherID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtTenKhuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(txtCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(txtNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooserKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rdoAvailable)
                        .addComponent(rdoUnavailable)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        btnSearch.setBackground(new java.awt.Color(102, 102, 255));
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_search_25px.png"))); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txtSearch)
                .addGap(18, 18, 18)
                .addComponent(btnSearch)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        btnAdd.setBackground(new java.awt.Color(255, 153, 153));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_add_25px_5.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(0, 204, 204));
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_reset_25px_1.png"))); // NOI18N
        btnRefresh.setText("Làm mới");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(51, 255, 255));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_delete_25px_1.png"))); // NOI18N
        btnDelete.setText("Xoá");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(255, 255, 204));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_edit_25px.png"))); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(115, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(128, 128, 128)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(130, 130, 130))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate))
                .addGap(37, 37, 37)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnRefresh))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách khuyến mại", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        tblPhieuGiamGia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Phiếu", "Tên mã phiếu", "Gia trị", "Điều kiện áp dụng", "Ngày bắt đầu", "Ngày kêt thúc", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPhieuGiamGia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhieuGiamGiaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPhieuGiamGia);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlGiamGiaLayout = new javax.swing.GroupLayout(pnlGiamGia);
        pnlGiamGia.setLayout(pnlGiamGiaLayout);
        pnlGiamGiaLayout.setHorizontalGroup(
            pnlGiamGiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGiamGiaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGiamGiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlGiamGiaLayout.setVerticalGroup(
            pnlGiamGiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGiamGiaLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlGiamGiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlGiamGiaLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        GiamGia.add(pnlGiamGia, java.awt.BorderLayout.CENTER);

        add(GiamGia, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String search = txtSearch.getText().trim().toLowerCase();
        DefaultTableModel defaultTableModel = (DefaultTableModel) tblPhieuGiamGia.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(defaultTableModel);
        tblPhieuGiamGia.setRowSorter(sorter);
        if (search.isEmpty()) {
            sorter.setRowFilter(null);
            return;
        }
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + search, 0));
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        this.create();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        this.clear();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        this.delete();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        this.update();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblPhieuGiamGiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuGiamGiaMouseClicked
        int index = tblPhieuGiamGia.getSelectedRow();
        if (index >= 0 && index < phieuGiamGiaList.size()) {
            PhieuGiamGia entity = phieuGiamGiaList.get(index);
            this.setForm(entity);
        }
    }//GEN-LAST:event_tblPhieuGiamGiaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel GiamGia;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser jDateChooserBatDau;
    private com.toedter.calendar.JDateChooser jDateChooserKetThuc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlGiamGia;
    private javax.swing.JRadioButton rdoAvailable;
    private javax.swing.JRadioButton rdoUnavailable;
    private javax.swing.JTable tblPhieuGiamGia;
    private javax.swing.JTextField txtCondition;
    private javax.swing.JTextField txtNgayBatDau;
    private javax.swing.JTextField txtNgayKetThuc;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTenKhuyenMai;
    private javax.swing.JTextField txtValue;
    private javax.swing.JTextField txtVoucherID;
    // End of variables declaration//GEN-END:variables

    @Override
    public void open() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
public void setForm(PhieuGiamGia entity) {
    txtVoucherID.setText(String.valueOf(entity.getMaPhieu()));
    txtTenKhuyenMai.setText(String.valueOf(entity.getTenPhieu()));
    txtValue.setText(String.valueOf(entity.getGiaTri()));
    txtCondition.setText(String.valueOf(entity.getDieuKienApDung()));

    rdoAvailable.setSelected(entity.getTrangThai() == 1);
    rdoUnavailable.setSelected(entity.getTrangThai() == 0);

    // Set ngày bắt đầu và kết thúc
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    jDateChooserBatDau.setDate(entity.getNgayBatDau());
    txtNgayBatDau.setText(sdf.format(entity.getNgayBatDau()));

    jDateChooserKetThuc.setDate(entity.getNgayKetThuc());
    txtNgayKetThuc.setText(sdf.format(entity.getNgayKetThuc()));
}



   @Override
public PhieuGiamGia getForm() {
    PhieuGiamGia phieuGiamGia = new PhieuGiamGia();

    if (!txtVoucherID.getText().trim().isEmpty()) {
        phieuGiamGia.setMaPhieu(Integer.parseInt(txtVoucherID.getText().trim()));
    }

    phieuGiamGia.setGiaTri(Integer.parseInt(txtValue.getText().trim()));
    phieuGiamGia.setTenPhieu(txtTenKhuyenMai.getText().trim());
    phieuGiamGia.setDieuKienApDung(Integer.parseInt(txtCondition.getText().trim()));
    phieuGiamGia.setTrangThai(rdoAvailable.isSelected() ? 1 : 0);
    phieuGiamGia.setNgayBatDau(jDateChooserBatDau.getDate());
    phieuGiamGia.setNgayKetThuc(jDateChooserKetThuc.getDate());

    return phieuGiamGia;
}



@Override
public void fillToTable() {
    DefaultTableModel model = (DefaultTableModel) tblPhieuGiamGia.getModel();
    model.setRowCount(0);

    phieuGiamGiaList = phieuGiamGiaDAO.getAll();
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

    for (PhieuGiamGia pg : phieuGiamGiaList) {
        Object[] row = {
            pg.getMaPhieu(),
            pg.getTenPhieu(),
            pg.getGiaTri(),
            pg.getDieuKienApDung(),
            sdf.format(pg.getNgayBatDau()),
            sdf.format(pg.getNgayKetThuc()),
            pg.getTrangThai() == 1 ? "Có hiệu lực" : "Đã hết hạn"
        };
        model.addRow(row);
    }
}


   @Override
public void create() {
    if (txtValue.getText().trim().isEmpty() || txtCondition.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Giá trị và điều kiện áp dụng không được để trống!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Kiểm tra giá trị < điều kiện áp dụng
    int giaTri = Integer.parseInt(txtValue.getText().trim());
    int dieuKien = Integer.parseInt(txtCondition.getText().trim());
    if (giaTri >= dieuKien) {
        JOptionPane.showMessageDialog(this, "Giá trị phải nhỏ hơn điều kiện áp dụng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Kiểm tra ngày bắt đầu và ngày kết thúc
    if (jDateChooserBatDau.getDate() == null || jDateChooserKetThuc.getDate() == null) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày bắt đầu và ngày kết thúc!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    Date today = new Date();
    Date ngayBatDau = jDateChooserBatDau.getDate();
    Date ngayKetThuc = jDateChooserKetThuc.getDate();

    if (ngayBatDau.before(today)) {
        JOptionPane.showMessageDialog(this, "Ngày bắt đầu không được ở quá khứ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (ngayKetThuc.before(ngayBatDau)) {
        JOptionPane.showMessageDialog(this, "Ngày kết thúc phải sau hoặc bằng ngày bắt đầu!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        PhieuGiamGia phieuGiamGia = getForm();
        phieuGiamGiaDAO.create(phieuGiamGia);
        this.fillToTable();
        this.clear();
        JOptionPane.showMessageDialog(this, "Thêm phiếu giảm giá thành công!", "Thành công", JOptionPane.INFORMATION_MESSAGE);
    } catch (RuntimeException ex) {
        JOptionPane.showMessageDialog(this, "Lỗi khi thêm phiếu giảm giá: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
}



    @Override
public void update() {
    int selectedRow = tblPhieuGiamGia.getSelectedRow();
    if (selectedRow < 0 || selectedRow >= phieuGiamGiaList.size()) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một phiếu giảm giá để sửa!", "Lỗi", JOptionPane.WARNING_MESSAGE);
        return;
    }

    if (txtVoucherID.getText().trim().isEmpty() || txtCondition.getText().trim().isEmpty() || txtValue.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ Mã phiếu, Giá trị và Điều kiện áp dụng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (jDateChooserBatDau.getDate() == null || jDateChooserKetThuc.getDate() == null) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày bắt đầu và ngày kết thúc!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    int giaTri = Integer.parseInt(txtValue.getText().trim());
    int dieuKien = Integer.parseInt(txtCondition.getText().trim());

    if (giaTri >= dieuKien) {
        JOptionPane.showMessageDialog(this, "Giá trị phải nhỏ hơn điều kiện áp dụng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    Date today = new Date();
    Date ngayBatDau = jDateChooserBatDau.getDate();
    Date ngayKetThuc = jDateChooserKetThuc.getDate();

    if (ngayBatDau.before(today)) {
        JOptionPane.showMessageDialog(this, "Ngày bắt đầu không được ở quá khứ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (ngayKetThuc.before(ngayBatDau)) {
        JOptionPane.showMessageDialog(this, "Ngày kết thúc phải sau hoặc bằng ngày bắt đầu!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        PhieuGiamGia phieuGiamGia = getForm();
        // Gán mã phiếu đang chọn để đảm bảo update đúng bản ghi
        phieuGiamGia.setMaPhieu(Integer.parseInt(txtVoucherID.getText().trim()));

        phieuGiamGiaDAO.update(phieuGiamGia);
        this.fillToTable();
        this.clear();
        JOptionPane.showMessageDialog(this, "Cập nhật phiếu giảm giá thành công!", "Thành công", JOptionPane.INFORMATION_MESSAGE);
    } catch (RuntimeException ex) {
        JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật phiếu giảm giá: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
}


@Override
public void delete() {
    int selectedRow = tblPhieuGiamGia.getSelectedRow();

    if (selectedRow < 0 || selectedRow >= phieuGiamGiaList.size()) {
        XDialog.alert("Vui lòng chọn một phiếu giảm giá để xóa!");
        return;
    }

    if (!XDialog.confirm("Bạn thực sự muốn xóa phiếu giảm giá này?")) {
        return;
    }

    PhieuGiamGia entity = phieuGiamGiaList.get(selectedRow);
    int maPhieu = entity.getMaPhieu();

    try {
        phieuGiamGiaDAO.delete(maPhieu);
        this.fillToTable();
        this.clear();
        XDialog.alert("Xóa phiếu giảm giá thành công!");
    } catch (RuntimeException ex) {
        XDialog.alert("Không thể xóa vì phiếu giảm giá này đang được sử dụng trong sách hoặc hệ thống.");
    }
}



   @Override
public void clear() {
    int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn làm mới không?", "Xác nhận", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) {
        return;
    }

    // Reset ngày
    jDateChooserBatDau.setDate(null);
    txtNgayBatDau.setText("");

    jDateChooserKetThuc.setDate(null);
    txtNgayKetThuc.setText("");

    // Reset ô nhập
    txtVoucherID.setText("");
    txtValue.setText("");
    txtCondition.setText("");

    // Reset radio
    rdoAvailable.setSelected(false);
    rdoUnavailable.setSelected(false);
    txtTenKhuyenMai.setText("");
}



    @Override
    public void setEditable(boolean editable) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
